[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Posts",
    "section": "",
    "text": "Experiments with R interpolators\n\n\n\nR\n\n\nspatial\n\n\n\nMessing around with interpolating via a triangulation to apply coordinate transformations\n\n\n\nDavid O’Sullivan\n\n\nApr 2, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nLow level handling of sf objects\n\n\n\nR\n\n\nspatial\n\n\n\nYou can handle sf objects at a low level but it can take a bit of getting used to\n\n\n\nDavid O’Sullivan\n\n\nApr 2, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nKernel density estimation in R spatial\n\n\n\nR\n\n\nspatial\n\n\n\nHere’s one way to do kernel density estimation in R spatial\n\n\n\nDavid O’Sullivan\n\n\nApr 2, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nInverse distance weighted (IDW) interpolation using spatstat\n\n\n\nR\n\n\nspatial\n\n\n\nOne of the joys (ahem) of R spatial is moving data around between formats so you can use the best packages for particular jobs. Here’s an example using IDW interpolation in…\n\n\n\nDavid O’Sullivan\n\n\nApr 2, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nAffine transformations of sf objects\n\n\n\nR\n\n\nspatial\n\n\n\nManipulating simple features in sf is sorta simple, sorta not…\n\n\n\nDavid O’Sullivan\n\n\nApr 2, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nUniform random points on the globe\n\n\n\nR\n\n\nspatial\n\n\n\nThere isn’t as much land near the poles, so how do you make uniform randomly distributed points in lat-lng coordinate space. Here’s how!\n\n\n\nDavid O’Sullivan\n\n\nApr 2, 2024\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "other.html",
    "href": "other.html",
    "title": "Other stuff",
    "section": "",
    "text": "A random assortment of things I’ve worked on or played around with at various times that have any kind of web presence.\n\nGeospatial things\n\n30 day map challenge 2023 exploring (mostly) tmap and ggplot2 as thematic mapping tools\nNZ travel to work and study data visualized in my not-winning entry to there and back again\nMapping the Dulux colours of New Zealand and a Maptime! presentation about the same\nTiled and woven maps of multivariate data\n\n\n\nCOVID times\n\nA spatial COVID model I made with colleagues\nLocations of interest in the August - ??? delta outbreak in Aotearoa. Note that these are not the current locations of interest, but rather all of them over time, up to the point when I got fed up updating them!\n\n\n\nNetLogo\n\nA collection of NetLogo models to accompany Spatial Simulation: Exploring Pattern and Process\nThe beginnings of a collection of ‘native’ NetLogo utilities\n\n\n\nOther\n\nAn observable notebook to make whirlpool spiral origami crease patterns\nPhoto-blog of day hikes in the Bay Area when we lived in Berkeley\n\n\n\nEven more random\n\nwhat3chords (health warning turn down your volume!) some day this will be explained…"
  },
  {
    "objectID": "publications.html",
    "href": "publications.html",
    "title": "Publications",
    "section": "",
    "text": "A similar list is available at my ORCiD profile. You can also see them in citational context at my google scholar page, which is reasonably accurate. Links below are generally to official publisher sources, and are often paywalled. Open access copies are linked from my University of Auckland profile page. If you would like a copy of something in particular and can’t access it, then get in touch.\nJump to books, papers, book chapters, dissertations"
  },
  {
    "objectID": "publications.html#books",
    "href": "publications.html#books",
    "title": "Publications",
    "section": "books",
    "text": "books\nO’Sullivan D. 2024. Computing Geographically: Bridging Giscience and Geography (Guilford Press: New York).\nO’Sullivan D. 2017. Section Editor for ‘Fundamentals of GIScience’ (32 articles) in The International Encyclopedia of Geography: People, the Earth, Environment, and Technology. Richardson, D. (ed). New York: Wiley.\nMiller JA, D O’Sullivan and Wiegand N eds. 2016. Geographic Information Science: Proceedings of the 9th International Conference, GIScience 2016 Lecture Notes in Computer Science Vol. 9927 (Springer: Cham, Switzerland).\nO’Sullivan D and GLW Perry. 2013. Spatial Simulation: Exploring Pattern and Process (Wiley: Chichester, UK).\nO’Sullivan D and DJ Unwin. 2010. Geographic Information Analysis 2nd edn. (Wiley: Hoboken, NJ).\nO’Sullivan D and DJ Unwin. 2003. Geographic Information Analysis (Wiley: Hoboken, NJ)."
  },
  {
    "objectID": "publications.html#in-refereed-journals",
    "href": "publications.html#in-refereed-journals",
    "title": "Publications",
    "section": "in refereed journals",
    "text": "in refereed journals\nEtherington TR, D O’Sullivan, GLW Perry, DR Richards, and J Wainwright. 2024. A least-cost network neutral landscape model of human sites and routes. Landscape Ecology 39(3) 52. doi: 10.1007/s10980-024-01836-w.\nAntosz P, D Birks, B Edmonds, A Heppenstall, R Meyer, JG Polhill, D O’Sullivan and N Wijermans. 2023. What do you want theory for? A pragmatic analysis of the roles of “theory” in agent-based modelling. Environmental Modelling & Software 168 105802. doi: 10.1016/j.envsoft.2023.105802\nLester PJ, D O’Sullivan and GLW Perry. 2023. Gene drives for invasive wasp control: Extinction is unlikely, with suppression dependent on dispersal and growth rates. Ecological Applications 33(7) e2912. doi: 10.1002/eap.2912\nBergmann L, LF Chaves, D O’Sullivan and RG Wallace. 2023. Dominant Modes of Agricultural Production Helped Structure Initial COVID-19 Spread in the U.S. Midwest. ISPRS International Journal of Geo-Information 12(5) 195. doi: 10.3390/ijgi12050195\nEtherington T, F Morgan, D O’Sullivan. 2022, Binary space partitioning generates hierarchical and rectilinear neutral landscape models suitable for human-dominated landscapes. Landscape Ecology 37(7) 1761–1769. doi: 10.1007/s10980-022-01452-6\nChaves LF, MD Friberg, LA Hurtado, RM Rodríguez, D O’Sullivan and LR Bergmann. 2022. Trade, uneven development and people in motion: Used territories and the initial spread of COVID-19 in Mesoamerica and the Caribbean. Socio-Economic Planning Sciences 80 (March) 101161. doi: 10.1016/j.seps.2021.101161\nGibadullina A, LR Bergmann and D O’Sullivan. 2021. For Geographical Network Analysis. Tijdschrift voor Economische en Sociale Geografie 112(4) 482-487. doi: 10.1111/tesg.12489.\nO’Sullivan D. 2021. New mappings of GIScience and geography. A commentary on May Yuan’s ‘GIS research to address tensions in geography.’ Singapore Journal of Tropical Geography 42(1) 31–35. doi: 10.1111/sjtg.12345\nO’Sullivan D. 2021. Things are how they are because of how they got that way: Thoughts from the beach, on 50 years of Geographical Analysis. Geographical Analysis 53(1) 157–163. doi: 10.1111/gean.12225\nFranklin, RS, V Houlden, C Robinson, D Arribas-Bel, EC Delmelle, U Demšar, HJ Miller, and D O’Sullivan. 2021. Who counts? Gender, gatekeeping, and quantitative human geography. The Professional Geographer 73(1) 48–61. doi: 10.1080/00330124.2020.1828944\nO’Sullivan D, M Gahegan, DJ Exeter and B Adams. 2020. Spatially explicit models for exploring COVID 19 lockdown strategies. Transactions in GIS 24(4) 967–1000. doi: 10.1111/tgis.12660\nPayne WB and D O’Sullivan. 2020. Exploding the phone book: Spatial data arbitrage in the 1990s Internet boom. Annals of the American Association of Geographers 110(2) 391–398. doi: 10.1080/24694452.2019.1656999\nManson S, L An, KC Clarke, A Heppenstall, J Koch, B Krzyzanowski, F Morgan, D O’Sullivan, BC Runck, E Shook and L Tesfatsion. 2020. Methodological Issues of Spatial Agent-Based Models. Journal of Artificial Societies and Social Simulation 23(1) 3. doi: 10.18564/jasss.4174\nChristophers B and D O’Sullivan. 2019. Intersections of inequality in homeownership in Sweden. Housing Studies 34(6) 897-924. doi: 10.1080/02673037.2018.1495695\nMavoa S, N Bagheri, MJ Koohsari, AT Kaczynski, KE Lamb, K Oka, D O’Sullivan and K Witten. 2019. How do neighbourhood definitions influence the associations between built environment and physical activity? International Journal of Environmentalal Research and Public Health 16. doi: 10.3390/ijerph16091501\nO’Sullivan, D 2019. Untangling knots: Thoughts on Wilson’s New Lines. Transactions in GIS 32(1) 168-169. doi: 10.1111/tgis.12502\nLiu C, D O’Sullivan and GLW Perry. 2018. The rent gap revisited: gentrification in Point Chevalier, Auckland. Urban Geography 39(9) 1300-1325. doi: 10.1080/02723638.2018.1446883\nPerry GLW and D O’Sullivan. 2018. Identifying narrative descriptions in agent-based models representing past human-environment interactions. Journal of Archaeological Method and Theory, 25(3) 795-813. doi: 10.1007/s10816-017-9355-x\nMavoa S, K Lamb, D O’Sullivan, K Witten and M. Smith. 2018. Are disadvantaged children more likely to be excluded from analysis when applying global positioning systems inclusion criteria? BMC Research Notes, 11 578. doi: 10.1186/s13104-018-3681-2\nMahdavi Ardestani B, D O’Sullivan, and P Davis. 2018. A multi-scaled agent-based model of residential segregation applied to a real metropolitan area. Computers, Environment and Urban Systems, 69 1-16. doi: 10.1016/j.compenvurbsys.2017.11.002\nBergmann LR and D O’Sullivan. 2018. Reimagining GIScience for relational spaces. The Canadian Geographer / Le Géographe canadien. 62(1) 7-14. doi: 10.1111/cag.12405\nGetz WM, CR Marshall, CJ Carlson, L Giuggioli, SJ Ryan, SS Romañach, C Boettiger, SD Chamberlain, L Larsen, P D’Odorico, D O’Sullivan. 2018. Making ecological models adequate. Ecology Letters 21(2) 153-166. doi: 10.1111/ele.12893\nO’Sullivan D, LR Bergmann, and JE Thatcher. 2018. Spatiality, maps, and mathematics in critical human geography: toward a repetition with difference. The Professional Geographer 70(1) 129-139. doi: 10.1080/00330124.2017.1326081\nHarris R, D O’Sullivan, M Gahegan, M Charlton, L Comber, P Longley, C Brunsdon, N Malleson, A Heppenstall, A Singleton, D Arribas-Bel, and A Evans. 2017. More bark than bytes? Reflections on 21+ years of geocomputation. Environment and Planning B: Urban Analytics and City Science 44(4) 598-617. doi: 10.1177/2399808317710132.\nLiu C and O’Sullivan, D. 2016. An abstract model of gentrification as a spatially contagious succession process. Computers, Environment and Urban Systems 59 1-10. doi: 10.1016/j.compenvurbsys.2016.04.004\nThatcher JE, D O’Sullivan and D Mahmoudi. 2016. Data colonialism through accumulation by dispossession: new metaphors for everyday data. Environment and Planning D: Society and Space 34(6) 990-1006. doi: 10.1177/0263775816633195\nCheung AK-L, G Brierley, and D O’Sullivan. 2016. Landscape structure and dynamics on the Qinghai-Tibetan Plateau. Ecological Modelling 339 7-22. doi: 10.1016/j.ecolmodel.2016.07.015\nThatcher JE, LR Bergmann, B Ricker, R Rose-Redwood, D O’Sullivan, TJ Barnes, LR Barnesmoore, L Beltz Imaoka, R Burns, J Cinnamon, CM Dalton, C Davis, S Dunn, F Harvey, J-K Jung, E Kersten, L Knigge, N Lally, W Lin, D Mahmoudi, M Martin, W Payne, A Sheikh, T Shelton, E Sheppard, CW Strother, A Tarr, MW Wilson, and JC Young. 2016. Revisiting critical GIS. Environment and Planning A 48(5) 815-824. doi: 10.1177/0308518X15622208\nO’Sullivan D, T Evans, SM Manson, S Metcalf, A Ligmann-Zielinska, and C Bone. 2016. Strategic directions for agent-based modeling: avoiding the YAAWN syndrome. Journal of Land Use Science 11(2) 177-187. doi: 10.1080/1747423X.2015.1030463\nO’Sullivan D and SM Manson. 2015. Do physicists have geography envy? And what can geographers learn from it? Annals of the Association of American Geographers 105(4) 704–722. doi: 10.1080/00045608.2015.1039105\nCheung AK-L, D O’Sullivan and G Brierley. 2015. Graph-assisted landscape monitoring. International Journal of Geographical Information Science 29(4) 580-605. doi: 10.1080/13658816.2014.989856\nEtherington TR, EP Holland, and D O’Sullivan. 2015. NLMpy: a python software package for the creation of neutral landscape models within a general numerical framework. Methods in Ecology and Evolution 6(2) 164-168. doi: 10.1111/2041-210X.12308\nHong S-Y, D O’Sullivan and Y Sadahiro. 2014. Implementing Spatial Segregation Measures in R. PLoS ONE 9(11): e113767. doi: 10.1371/journal.pone.0113767\nO’Sullivan D. 2014. Don’t panic! The need for change and for curricular pluralism. Dialogues in Human Geography 4(1) 39-44. doi: 10.1177/2043820614525712\nMillington JDA, D O’Sullivan and GLW Perry. 2012. Model histories: Narrative explanation in generative simulation modelling. Geoforum 43(6) 1025-1034. doi: 10.1016/j.geoforum.2012.06.017\nMueller S, DJ Exeter, H Petousis-Harris, N Turner, D O’Sullivan and CD Buck. 2012. Measuring disparities in immunisation coverage among children in New Zealand. Health and Place 18(6) 1217-1223. doi: 10.1016/j.healthplace.2012.08.003\nHong S-Y and D O’Sullivan. 2012. Detecting ethnic residential clusters using an optimisation clustering method. International Journal of Geographical Information Science 26(8) 1257-1277. doi: 10.1080/13658816.2011.637045\nXue J, W Friesen and D O’Sullivan. 2012. Diversity in Chinese Auckland: Hypothesising multiple ethnoburbs. Population, Space and Place 18 579-595. doi: 10.1002/psp.688\nMavoa S, K Witten, T McCreanor, and D O’Sullivan. 2012. GIS based destination accessibility via public transit and walking in Auckland, New Zealand. Journal of Transport Geography 20(1) 15-22. doi: 10.1016/j.jtrangeo.2011.10.001\nMateos P, PA Longley, and D O’Sullivan. 2011. Ethnicity and Population Structure in Personal Naming Networks. PLoS ONE 6(9) e22943. doi: 10.1371/journal.pone.0022943\nPearson J, R Lay-Yee, P Davis, D O’Sullivan, M von Randow, N Kerse and S Pradhan. 2011. Primary care in an aging society: Building and testing a microsimulation model for policy purposes. Social Science Computer Review 29(1) 21-36. doi: 10.1177/0894439310370087\nO’Sullivan D. 2009. What’s critical about critical GIS? Cartographica 44(1) 7-8. doi: 10.3138/carto.44.1.5\nO’Sullivan D and G. L. W. Perry. 2009. A discrete space model for continuous space dispersal processes. Ecological Informatics 4(2) 57-68. doi: 10.1016/j.ecoinf.2009.03.001\nO’Sullivan D. 2009. Changing neighborhoods – neighborhoods changing: a framework for spatially explicit agent-based models of social systems. Sociological Methods and Research 37(4) 498-530. doi: 10.1177/0049124109334793\nReardon SF, CR Farrell, SA Matthews, D O’Sullivan, K Bischoff and G Firebaugh. 2009. Race and space in the 1990s: changes in the geographic scale of racial residential segregation, 1990-2000. Social Science Research 38 55-70. doi: 10.1016/j.ssresearch.2008.10.002\nLee BA, SF Reardon, G Firebaugh, CR Farrell, SA Matthews and D O’Sullivan. 2008. Beyond the census tract: patterns and determinants of racial segregation at multiple geographic scales. American Sociological Review 73(October) 766-791. doi: 10.1177/000312240807300504\nReardon SF, SA Matthews, D O’Sullivan, BA Lee, G Firebaugh, CR Farrell and K Bischoff. 2008. The geographic scale of metropolitan segregation. Demography, 45(3) 489-514. doi: 10.1353/dem.0.0019\nO’Sullivan D. 2008. Geographical information science: agent-based models. Progress in Human Geography 32(2) 541-550. doi: 10.1177/0309132507086879\nO’Sullivan D and DWS Wong. 2007. A surface-based approach to measuring spatial segregation. Geographical Analysis 39(2) 147-168. doi: 10.1111/j.1538-4632.2007.00699.x\nO’Sullivan D. 2006. Geographical information science: critical GIS. Progress in Human Geography 30(6) 783-791. doi: 10.1177/0309132506071528\nRygel L, D O’Sullivan and B Yarnal. 2006. A method for constructing a social vulnerability index: an application to hurricane storm surges in a developed country. Mitigation and Adaptation Strategies for Global Change 11(3) 741-764. doi: 10.1007/s11027-006-0265-6\nManson SM and D O’Sullivan. 2006. Complexity theory in the study of space and place. Environment and Planning A 38(4) 677-692. doi: 10.1068/a37100\nO’Sullivan D, JP Messina, SM Manson and TW Crawford. 2006. Space, place, and complexity science. Environment and Planning A 38(4) 611-617. doi: 10.1068/a3812\nO’Sullivan D. 2005. Geographical information science: time changes everything. Progress in Human Geography 29(6) 749-756. doi: 10.1191/0309132505ph581pr\nCrawford TW, JP Messina, SM Manson and D O’Sullivan. 2005. Complexity science, complex systems, and land-use research. Environment and Planning B: Planning & Design 32(5) 792-798. doi: 10.1068/b3206ed\nReardon SF and D O’Sullivan. 2004. Measures of Spatial Segregation. Sociological Methodology 34(1) 121-162. doi: 10.1111/j.0081-1750.2004.00150.x\nO’Sullivan D. 2004. Complexity science and human geography. Transactions of the Institute of British Geographers 29(3) 282-295. doi: 10.1111/j.0020-2754.2004.00321.x\nO’Sullivan D. 2002. Toward micro-scale spatial modelling of gentrification. Journal of Geographical Systems 4(3) 251-274. doi: 10.1007/s101090200086\nO’Sullivan D. 2001. Graph-cellular automata: a generalised discrete urban and regional model. Environment and Planning B: Planning & Design 28(5) 687-705. doi: 10.1068/b2707\nHaklay M, T Schelhorn, D O’Sullivan and M Thurstain-Goodwin. 2001. “So go down town”: Simulating pedestrian movement in town centres. Environment and Planning B: Planning & Design 28(3) 343-359. doi: 10.1068/b2758t\nTorrens PM and D O’Sullivan. 2001. Cellular automata and urban simulation: where do we go from here? Environment and Planning B: Planning & Design 28(2) 163-168. doi: 10.1068/b2802ed\nO’Sullivan D and A Turner. 2001. Visibility graphs and landscape visibility analysis. International Journal of Geographical Information Science 15(3) 221-237. doi: 10.1080/13658810151072859\nTurner A, M Doxa, D O’Sullivan and A Penn. 2001. From isovists to visibility graphs: a methodology for the analysis of architectural space. Environment and Planning B: Planning & Design 28(1) 103-121. doi: 10.1068/b2684\nO’Sullivan D. 2001. Exploring spatial process dynamics using irregular cellular automaton models. Geographical Analysis 33(1) 1-18. doi: 10.1111/j.1538-4632.2001.tb00433.x\nO’Sullivan D. and M Haklay. 2000. Agent-based models and individualism: is the world agent-based? Environment and Planning A 32(8) 1409-1425. doi: 10.1068%2Fa32140\nO’Sullivan D, A Morrison and J Shearer. 2000. Using desktop GIS for the investigation of accessibility by public transport: an isochrone approach. International Journal of Geographical Information Science 14(1) 85-104. doi: 10.1080/136588100240976"
  },
  {
    "objectID": "publications.html#book-chapters",
    "href": "publications.html#book-chapters",
    "title": "Publications",
    "section": "book chapters",
    "text": "book chapters\nC Andris and D O’Sullivan. 2019. Spatial Networks. In Handbook of Regional Science (eds MM Fischer and P Nijkamp). Springer. doi: 10.1007/978-3-642-36203-3_67-1.\nD O’Sullivan. 2018. Cartography and geographic information systems. In J Ash, R Kitchin and A Leszczynski (eds), Digital Geographies, (Los Angeles: Sage), pages 118-128.\nD O’Sullivan. 2018. Big data … why (oh why?) this computational social science? In JE Thatcher, J Eckert and A Shears (eds), Thinking Big Data in Geography: New Regimes, New Research, (Lincoln: University of Nebraska Press), pages 21-38. doi: 10.2307/j.ctt21h4z6m.7\nLR Bergmann and D O’Sullivan. 2017. Computing with many spaces: Generalizing projections for the digital geohumanities and GIScience. In Proceedings of GeoHumanities’17: 1st ACM SIGSPATIAL Workshop on Geospatial Humanities, Redondo Beach, CA, November 7-10 (GeoHumanities’17), pages 31-38. doi: 10.1145/3149858.3149866\nThatcher JE, LR Bergmann and D O’Sullivan. 2016. Searching for common ground (again). In Short Paper Proceedings of 9th International Conference on Geographical Information Science, eds JA Miller, D O’Sullivan and N Wiegand, (Montreal, Canada), pages 304-307. doi: 10.21433/B3118nq409qz\nPfeffer K, J Martinez, D O’Sullivan and D Scott. 2015. Geo-Technologies for Spatial Knowledge: Challenges for Inclusive and Sustainable Urban Development. In J Gupta, K Pfeffer, H Verrest and M Ros-Tonen (eds), Geographies of Urban Governance (Cham: Springer International Publishing), pages 147-173. doi: 10.1007/978-3-319-21272-2_8\nO’Sullivan D. 2014. Spatial Network Analysis. In Handbook of Regional Science (eds MM Fischer and P Nijkamp). Springer, pages 1253-1273. doi: 10.1007/978-3-642-23430-9_67\nO’Sullivan D, JDA Millington, GLW Perry and J Wainwright. 2012. Agent-Based Models – Because They’re Worth It? In AJ Heppenstall, AJ Crooks, LM See, and M Batty (eds), Agent-Based Models of Geographical Systems (Springer: Dordrecht, Netherlands), pages 109-123. doi: 10.1007/978-90-481-8927-4_6\nHeppenstall AJ, AJ Evans, MH Birkin, JR Macgill and D O’Sullivan. 2005. The Use of Hybrid Agent-Based Systems to Model Petrol Markets. In T Terano, H Kita, H Kaneda, K Arai and H Deguchi (eds), Agent-Based Simulation: From Modelling Methodologies to Real-World Applications, Springer Series on Agent-Based Social Systems, pages 154-162. doi: 10.1007/4-431-26925-8_17\nO’Sullivan D. 2004. Too much of the wrong kind of data: implications for the practice of micro-scale spatial modelling. In MF Goodchild and D Janelle (eds), Spatially Integrated Social Science: Examples of Best Practice (Oxford University Press: Oxford), pages 95-107.\nO’Sullivan D, JR Macgill and C Yu. 2003. Agent-based residential segregation: a hierarchically structured spatial model. In C Macal, M North and D Sallach (eds), Agent 2003: Challenges in Social Simulation, pages 493-507 (Argonne National Laboratory: Chicago). www.agent2004.anl.gov/Agent2003.pdf\nO’Sullivan D. 2002. Understanding the difference that space can make: toward a geographical agent modeling environment. In C. Macal and D. Sallach (eds), Agent 2002: Ecology, Exchange, and Evolution, pages 13-25 (Argonne National Laboratory: Chicago). www.agent2003.anl.gov/proceedings/2002.pdf\nO’Sullivan D and PM Torrens. 2001. Cellular models of urban systems. In S Bandini and T Worsch (eds), Theoretical and Practical Issues on Cellular Automata, Proceedings of the Fourth International Conference on Cellular Automata for Research and Industry (ACRI 2000), October 4–6, Karlsruhe, Germany (Springer-Verlag: London), pages 108-116. [Also available as CASA Working Paper 22 at www.casa.ucl.ac.uk/cellularmodels.pdf"
  },
  {
    "objectID": "publications.html#dissertations",
    "href": "publications.html#dissertations",
    "title": "Publications",
    "section": "dissertations",
    "text": "dissertations\nPhD: O’Sullivan D. 2000. Graph-based Cellular Automaton Models of Urban Spatial Processes. University College London.\nMSc: O’Sullivan D. 1997. Using GIS to create public transport travel time isochrones for the Glasgow area. University of Glasgow."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "About",
    "section": "",
    "text": "This website is a shop window for Geospatial Stuff through which I offer contract expertise in data analytics and visualisation, simulation modelling, and training, especially in relation to all things geospatial. For more information contact me.\n\nResearch\nI am an established geography and geospatial researcher and scholar with almost 30 years experience at UCL (1997-2000), Penn State (2000-04), University of Auckland (2004-13), Berkeley (2013-18), and Victoria University of Wellington (2018-24). I am an Honorary Professor in the School of Environment at University of Auckland. You can find out more about my academic exploits from the ‘Academic’ drop-down menu above, or for a quick overview, see my Google Scholar profile.\n\n\nCommmunicating ideas\nI have written 3 books and numerous articles, reviews, and book chapters.\nI have taught for over 20 years and can put together a mean slide show. I use web-formats, primarily revealjs and quarto. See my presentations, or the slides from this course.\n\n\nCommunicating data\nI work all the time in R and Python developing workflows to tidy, reformat, analyse, and visualize data, especially spatial data. I am a trained cartographer, and while I haven’t done a lot of publication cartography per se I have regularly worked on visual analytics or maps of complex data in research projects and publications.\n\n\nWrangling data\nI have been programming since forever. The languages I use all the time are Python and R, but I have experience in several others (notably Java and JavaScript). I am not a software developer, but can write well organised and documented code. I am not a web developer, but will roll up my sleeves and figure stuff out if called on! Most of my web stuff is linked from these pages, so just have a look around, especially under Other stuff. The most complicated web-thing I’ve built is this New Zealand 2018 commute visualization.\n\n\nSimulating stuff\nI love NetLogo, but freely admit that it is somewhat niche (albeit surprisingly powerful, see this geographical COVID model I built in lockdown). I’ve also written a book about this.\n\n\nProject management\nBefore academia I was a project engineer leading build, test, commissioning and maintenance of production line laser-scanning inspection equipment, working with major multinationals such as IBM, Kodak, Dow Chemical, and Sony. In that role I learned a great deal about project and people management."
  },
  {
    "objectID": "posts/2021-10-22-spatstat-idw/spatstat-idw.html",
    "href": "posts/2021-10-22-spatstat-idw/spatstat-idw.html",
    "title": "Inverse distance weighted (IDW) interpolation using spatstat",
    "section": "",
    "text": "Libraries are the usual suspects plus spatstat (duh) and maptools for some extra conversions. We also need terra for the data prep.\n\nlibrary(sf)\nlibrary(dplyr)\nlibrary(tmap)\nlibrary(spatstat)\nlibrary(terra)"
  },
  {
    "objectID": "posts/2021-10-22-spatstat-idw/spatstat-idw.html#libraries",
    "href": "posts/2021-10-22-spatstat-idw/spatstat-idw.html#libraries",
    "title": "Inverse distance weighted (IDW) interpolation using spatstat",
    "section": "",
    "text": "Libraries are the usual suspects plus spatstat (duh) and maptools for some extra conversions. We also need terra for the data prep.\n\nlibrary(sf)\nlibrary(dplyr)\nlibrary(tmap)\nlibrary(spatstat)\nlibrary(terra)"
  },
  {
    "objectID": "posts/2021-10-22-spatstat-idw/spatstat-idw.html#introduction",
    "href": "posts/2021-10-22-spatstat-idw/spatstat-idw.html#introduction",
    "title": "Inverse distance weighted (IDW) interpolation using spatstat",
    "section": "Introduction",
    "text": "Introduction\nAs is often the case there is useful functionality in a package that doesn’t play nice with the core R-spatial packages. spatstat is really great for lots of things, but does not support sf and even needs a bit of persuading to handle sp data. Its implementation of IDW interpolation is nice however, so it’s nice to know how to use it. Whether or not you should ever use IDW is another question altogether, but we can worry about that some other time.\n\nData\nFirst we need a set of values to interpolate. I made a projected version of the R core dataset volcano which is a nice place to start.\n\nmaungawhau &lt;-  rast(\"maungawhau.tif\")\n\n\n\nSome random control points and a study area\nWe can get a dataframe of random points on the surface using terra::spatSample. We’ll make this into a sf object as a starting point because that’s the most likely situation when you want to interpolate data (you will have an sf source).\n\npts &lt;- maungawhau |&gt;\n  spatSample(500, xy = TRUE) |&gt;\n  st_as_sf(coords = c(\"x\", \"y\")) |&gt;\n  st_set_crs(2193) |&gt;\n  st_jitter(5)\n\nWe also need a spatial extent for the interpolation, so let’s just make a convex hull of the points\n\nspatial_extent &lt;- pts |&gt;\n  st_union() |&gt;\n  st_convex_hull() |&gt;\n  st_sf()\n\nAnd just to see where we are at\n\ntm_shape(maungawhau) + \n  tm_raster() +\n  tm_shape(pts) + \n  tm_dots() + \n  tm_shape(spatial_extent) + \n  tm_borders() + \n  tm_layout(legend.outside = TRUE)"
  },
  {
    "objectID": "posts/2021-10-22-spatstat-idw/spatstat-idw.html#make-the-data-into-a-spatstat-point-pattern",
    "href": "posts/2021-10-22-spatstat-idw/spatstat-idw.html#make-the-data-into-a-spatstat-point-pattern",
    "title": "Inverse distance weighted (IDW) interpolation using spatstat",
    "section": "Make the data into a spatstat point pattern",
    "text": "Make the data into a spatstat point pattern\nspatstat has its own format for point patterns, including coordinates, marks (the values) and a window or owin (the spatial extent). It’s best to make the window first and then we can make the whole thing all at once. spatstat prefers sp objects, so we go via ‘Spatial’ to get a spatstat::owin object. maptools provides the conversion to an owin.\n\nW &lt;- spatial_extent |&gt;\n  as.owin()\n\nWe also need the control point coordinates\n\nxy &lt;- pts |&gt;\n  st_coordinates() |&gt;\n  as_tibble()\n\nNow we can make a spatstat::ppp point pattern\n\npp &lt;- ppp(x = xy$X, xy$Y, marks = pts$maungawhau, window = W)\nplot(pp)\n\n\n\n\n\n\n\n\nSuccess!\nA previous notebook showed an even quicker way to do this, but where the window will be formed from a bounding box (and where’s the fun in that?)\npts %&gt;%\n  as(\"Spatial\") %&gt;%\n  as.ppp()"
  },
  {
    "objectID": "posts/2021-10-22-spatstat-idw/spatstat-idw.html#interpolation",
    "href": "posts/2021-10-22-spatstat-idw/spatstat-idw.html#interpolation",
    "title": "Inverse distance weighted (IDW) interpolation using spatstat",
    "section": "Interpolation",
    "text": "Interpolation\nIt’s easy from here. power is the inverse power applied to distances, and eps is the resolution in units of the coordinate system.\n\nresult &lt;- idw(pp, power = 2, eps = 10)\nplot(result)\n\n\n\n\n\n\n\n\nThis is readily converted back to a terra raster for comparison with the original surface.\n\ninterpolation &lt;- rast(result)\ncrs(interpolation) &lt;- crs(maungawhau) # spatstat does not retain CRS information\n\nm1 &lt;- tm_shape(maungawhau) + \n  tm_raster()\nm2 &lt;- tm_shape(interpolation) +\n  tm_raster()\n\ntmap_arrange(m1, m2)\n\n\n\n\n\n\n\n\nLike I said, IDW is not necessarily a great interpolation method!"
  },
  {
    "objectID": "posts/2021-12-08-low-level-handling-sf-objects/low-level-sf-objects.html",
    "href": "posts/2021-12-08-low-level-handling-sf-objects/low-level-sf-objects.html",
    "title": "Low level handling of sf objects",
    "section": "",
    "text": "knitr::opts_chunk$set(error = TRUE, message = TRUE)"
  },
  {
    "objectID": "posts/2021-12-08-low-level-handling-sf-objects/low-level-sf-objects.html#packages",
    "href": "posts/2021-12-08-low-level-handling-sf-objects/low-level-sf-objects.html#packages",
    "title": "Low level handling of sf objects",
    "section": "Packages",
    "text": "Packages\nEverything here needs just sf and dplyr.\n\nlibrary(sf)\nlibrary(dplyr)"
  },
  {
    "objectID": "posts/2021-12-08-low-level-handling-sf-objects/low-level-sf-objects.html#making-polygons",
    "href": "posts/2021-12-08-low-level-handling-sf-objects/low-level-sf-objects.html#making-polygons",
    "title": "Low level handling of sf objects",
    "section": "Making polygons",
    "text": "Making polygons\nMy main confusion dealing with polygons in sf sounds dumb, but was easily fixed. Matrices in R get populated by column, by default, where the points in a polygon are in the rows of the matrix (as they would be in a dataframe with x and y attributes). You just have to make sure to populate the matrices in the right order.\nThere’s also the slightly strange fact that you have to wrap a matrix of points in a list to make a polygon.\nSo because of the row-column thing, there’s a tendency to do\n\nmat &lt;- matrix(c(0, 0,\n                1, 0,\n                1, 1,\n                0, 1,\n                0, 0), nrow = 5, ncol = 2)\nsquare &lt;- st_polygon(list(mat))\n\nError in MtrxSet(x, dim, type = \"POLYGON\", needClosed = TRUE): polygons not (all) closed\n\n\nBut that fails, because the matrix we made was\n\nmat\n\n     [,1] [,2]\n[1,]    0    1\n[2,]    0    0\n[3,]    1    1\n[4,]    0    0\n[5,]    1    0\n\n\nand the first and last rows don’t match (even if they did, it’s not actually a polygon!).\nBut specify that the matrix should be populated byrow and all is well\n\nsquare &lt;- st_polygon(list(matrix(c(0, 0,\n                                   1, 0,\n                                   1, 1,\n                                   0, 1,\n                                   0, 0), nrow = 5, ncol = 2, byrow = TRUE)))\nplot(square)\n\n\n\n\n\n\n\n\nIf you happen to have vectors of the x and y coordinates, then it’s easier.\n\nx &lt;- c(0, 1, 1, 0, 0)\ny &lt;- c(0, 0, 1, 1, 0)\nsquare &lt;- st_polygon(list(matrix(c(x, y), nrow = 5, ncol = 2)))\nplot(square)"
  },
  {
    "objectID": "posts/2021-12-08-low-level-handling-sf-objects/low-level-sf-objects.html#floating-point-coordinates-and-their-discontents",
    "href": "posts/2021-12-08-low-level-handling-sf-objects/low-level-sf-objects.html#floating-point-coordinates-and-their-discontents",
    "title": "Low level handling of sf objects",
    "section": "Floating point coordinates and their discontents",
    "text": "Floating point coordinates and their discontents\nsf defaults to using floating point calculations which has some annoying side-effects. For example, the code below results in an error\n\nangles &lt;- 0:3 * 2 * pi / 3\nx &lt;- cos(angles)\ny &lt;- sin(angles)\ntriangle &lt;- st_polygon(list(matrix(c(x, y), nrow = 7, ncol = 2)))\n\nWarning in matrix(c(x, y), nrow = 7, ncol = 2): data length [8] is not a\nsub-multiple or multiple of the number of rows [7]\n\n\nError in MtrxSet(x, dim, type = \"POLYGON\", needClosed = TRUE): polygons not (all) closed\n\n\nBecause sf defaults to floating point it doesn’t consider the polygon closed due to precision issues that mean R considers sin(0) != sin(2 * pi):\n\nsin(0) == sin(2 * pi)\n\n[1] FALSE\n\n\nThere is no easy way to fix this except to round the coordinates!\n\nx &lt;- round(x, 6)\ny &lt;- round(y, 6)\ntriangle &lt;- st_polygon(list(matrix(c(x, y), nrow = 4, ncol = 2)))\nplot(triangle)\n\n\n\n\n\n\n\n\nThere’s not a lot you can do about this when you are constructing sf objects. Polygons must be closed, and equality is strictly applied to the opening and closing points. You can’t ask st_polygon to automatically close polygons for you.\nOnce you have polygons to work with, the problem can come back to bite you, but there is a way around it. For example, this works OK:\n\nsquare %&gt;% \n  st_difference(triangle) %&gt;%\n  plot()\n\n\n\n\n\n\n\n\nBut let’s make two squares that are theoretically adjacent to one another, but happen to have non-integer coordinates (which… is pretty commonplace!)\n\nangles &lt;- seq(1, 7, 2) * 2 * pi / 8\nangles &lt;- c(angles, angles[1])\nx1 &lt;- cos(angles)\ny1 &lt;- sin(angles)\n\ns1 &lt;- st_polygon(list(matrix(c(x1, y1), nrow = 5, ncol = 2)))\nbb &lt;- st_bbox(s1)\ns2 &lt;- s1 + c(bb$xmax - bb$xmin, 0)\n\nplot(s1, xlim = c(-1, 2.1))\nplot(s2, add = TRUE)\n\n\n\n\n\n\n\n\nTwo squares, next to one another as we might hope, but if, for example, we st_union them we get a MULTIPOLYGON.\n\ns3 &lt;- st_union(s1, s2)\ns3\n\nMULTIPOLYGON (((0.7071068 0.7071068, -0.7071068 0.7071068, -0.7071068 -0.7071068, 0.7071068 -0.7071068, 0.7071068 0.7071068)), ((2.12132 0.7071068, 0.7071068 0.7071068, 0.7071068 -0.7071068, 2.12132 -0.7071068, 2.12132 0.7071068)))\n\n\nIf we plot them, they still appear separate\n\nplot(s3)\n\n\n\n\n\n\n\n\nand if we measure the distance between them, turns out they don’t touch at all, but are in fact a miniscule distance apart…\n\ns1 %&gt;% st_distance(s2)\n\n             [,1]\n[1,] 3.330669e-16\n\n\nIt’s probably not necessary to point out how silly this is, even if it is strictly correct.\n\nRXKCD::getXKCD(2170)$img\n\nError in loadNamespace(x): there is no package called 'RXKCD'"
  },
  {
    "objectID": "posts/2021-12-08-low-level-handling-sf-objects/low-level-sf-objects.html#specifying-precision-for-spatial-operations",
    "href": "posts/2021-12-08-low-level-handling-sf-objects/low-level-sf-objects.html#specifying-precision-for-spatial-operations",
    "title": "Low level handling of sf objects",
    "section": "Specifying precision for spatial operations",
    "text": "Specifying precision for spatial operations\nBy contrast if we use rgeos functions the equivalent union operation works as we might expect (although we do have to feed rgeos the old sp types of polygon, which we can do via a call to as(\"Spatial\")…)\n\nrgeos::gUnion(as(s1, \"Spatial\"), as(s2, \"Spatial\")) %&gt;%\n  st_as_sfc() %&gt;%\n  plot()\n\nError in loadNamespace(x): there is no package called 'rgeos'\n\n\nsf does allow us to effectively emulate the rgeos behaviour, albeit not for simple geometries. When we instead bundle geometries up into feature collections, we can assign them a precision, and this will take care of the kinds of problems we see above:\n\ns1_sfc &lt;- s1 %&gt;% \n  st_sfc() %&gt;%\n  st_set_precision(1e8)\ns2_sfc &lt;- s2 %&gt;% \n  st_sfc() %&gt;%\n  st_set_precision(1e8)\n\ns1_sfc %&gt;% \n  st_union(s2_sfc) %&gt;%\n  plot()\n\n\n\n\n\n\n\n\nThe first time I looked this up in help, I got it wrong due to careless reading, and, I think, assuming that the number you provide to st_set_precision() was a ‘tolerance’, or, in effect a ‘snap distance’. The help is also a bit roundabout, and directs you to this page, for an explanation of how it works.\nIn effect all coordinates are adjusted by applying a function like this one:\n\nadjust_precision &lt;- function(x, precision) {\n  round(x * precision) / precision\n}\nsqrt(2) %&gt;% adjust_precision(1000)\n\n[1] 1.414\n\n\n\nst_snap\nAnother possible fix for the floating point issue is snapping points to the coordinates of another object before applying operations. So this works, although it is not as clean as the st_precision option. On the other hand, it does work on plain geometry objects, not only on those that have been bundled up into collections.\n\ns1 %&gt;% st_snap(s2, 1e-8) %&gt;%\n  st_union(s2) %&gt;%\n  plot()"
  },
  {
    "objectID": "posts/2021-12-08-low-level-handling-sf-objects/low-level-sf-objects.html#in-conclusion",
    "href": "posts/2021-12-08-low-level-handling-sf-objects/low-level-sf-objects.html#in-conclusion",
    "title": "Low level handling of sf objects",
    "section": "In conclusion",
    "text": "In conclusion\nThe tools for making and manipulating geometries at a low level are available in sf but they are not always as simple as you’d like. Of course, most often you are dealing with datasets and that’s where sf comes into its own. Just remember st_set_precision() and you should be able to avoid quite a few headaches…"
  },
  {
    "objectID": "books.html",
    "href": "books.html",
    "title": "Books",
    "section": "",
    "text": "Computing Geographically argues for the importance of giscience taking geography seriously, and also for geography taking giscience more seriously. Too much GIS work is conducted as if \\((x,y)\\) coordinates were all that is needed to make data geographical; equally, far too many geographers think that those coordinates are all that GISers care about. This book aims to bridge the divide. An accompanying website includes high resolution copies of all the figures, and ‘bonus material’ (mostly code). See: computinggeographically.org.\n\n\n\n Spatial Simulation: Exploring Pattern and Process with George Perry is an advanced introduction to simple spatial simulation models for researchers in fields such as geography, planning, archaeology, ecology and beyond. George and I believe such models have great value across the ‘spatial sciences’ but the literature is scattered, making it a challenge for researchers to get started. We read all those mathematics, physics and statistics papers, so you won’t have to! A library of models in NetLogo accompanies the book, and can be downloaded here or explored at patternandprocess.org.\n\n\n\n Geographic Information Analysis with Dave Unwin, was first published in 2003, with a second edition in 2010, and translations into Mandarin and Korean. It has been a mainstay of my teaching (and that of many others!) since first publication, and offers an excellent, proven introduction to key principles and methods of spatial analysis and modelling."
  },
  {
    "objectID": "posts/2021-10-21-experiments-with-r-interpolators/experiments-with-R-interpolators.html",
    "href": "posts/2021-10-21-experiments-with-r-interpolators/experiments-with-R-interpolators.html",
    "title": "Experiments with R interpolators",
    "section": "",
    "text": "library(akima)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(sf)\n\nThis notebook shows how we can use a set of paired ‘control points’ of a projection to interpolate unknown locations to that projection. The basic setup is a table of pairs of coordinate pairs \\((x_1,y_1)\\) and \\((x_2,y_2)\\) representing the same location in two different coordinate systems. Given this setup assuming that the projection is well-behaved with no serious ‘breaks’ we can form an empirical projection to estimate locations in one coordinate system for ‘unknown’ locations in the other. See, for example\n\nGaspar J A, 2011, “Using Empirical Map Projections for Modeling Early Nautical Charts”, in Advances in Cartography and GIScience Ed A Ruas (Springer Berlin Heidelberg), pp 227–247, http://link.springer.com/10.1007/978-3-642-19214-2_15"
  },
  {
    "objectID": "posts/2021-10-21-experiments-with-r-interpolators/experiments-with-R-interpolators.html#load-libraries",
    "href": "posts/2021-10-21-experiments-with-r-interpolators/experiments-with-R-interpolators.html#load-libraries",
    "title": "Experiments with R interpolators",
    "section": "",
    "text": "library(akima)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(sf)\n\nThis notebook shows how we can use a set of paired ‘control points’ of a projection to interpolate unknown locations to that projection. The basic setup is a table of pairs of coordinate pairs \\((x_1,y_1)\\) and \\((x_2,y_2)\\) representing the same location in two different coordinate systems. Given this setup assuming that the projection is well-behaved with no serious ‘breaks’ we can form an empirical projection to estimate locations in one coordinate system for ‘unknown’ locations in the other. See, for example\n\nGaspar J A, 2011, “Using Empirical Map Projections for Modeling Early Nautical Charts”, in Advances in Cartography and GIScience Ed A Ruas (Springer Berlin Heidelberg), pp 227–247, http://link.springer.com/10.1007/978-3-642-19214-2_15"
  },
  {
    "objectID": "posts/2021-10-21-experiments-with-r-interpolators/experiments-with-R-interpolators.html#get-input-datasets",
    "href": "posts/2021-10-21-experiments-with-r-interpolators/experiments-with-R-interpolators.html#get-input-datasets",
    "title": "Experiments with R interpolators",
    "section": "Get input datasets",
    "text": "Get input datasets\n\nThe empirical projection\nThis file contains points on a global grid system, generated using the dggridR package. We can see the points in ‘lat-lon’ space below. Note how because this is a global grid system the points appear to ‘thin out’ towards the poles. This is an artifact of plotting the points in lat-lon, which is also explored in this post.\n\nemp_proj &lt;- read.csv(\"dgg-2432-no-offsets-p4-briesemeister.csv\")\nggplot(emp_proj) +\n  geom_point(aes(x = lon, y = lat), size = 0.05) +\n  coord_equal()\n\n\n\n\n\n\n\n\nInspection of the data shows we have two sets of coordinates lon, lat and x, y.\n\nhead(emp_proj)\n\n  ID dir     lon      lat          x       y\n1  0   .   11.25 58.28253  -428675.9 1520344\n2  1   . -168.75 58.28253 -1197290.8 7794188\n3  2   . -168.75 65.09003 -1120150.7 7234575\n4  3   . -168.75 72.07407 -1048583.9 6613223\n5  4   . -168.75 79.18998  -973499.6 5945572\n6  5   . -168.75 86.38746  -892969.4 5242144\n\n\nThis projection is Briesemeister, which is an oblique form of the Hammer-Aitoff projection. See\n\nBriesemeister W, 1953, “A New Oblique Equal-Area Projection” Geographical Review 43(2) 260\n\nIt’s possible to form this projection with a proj string, but it is not commonly supported in GIS, and who knows proj strings that well?! For the record, this is the string you are looking for:\n+proj=ob_tran +o_proj=hammer +o_lat_p=45 +o_lon_p=-10 +lon_0=0 +R=6371007\n\n\nA sample dataset\nWe also want a set of points to project, and what better than a world map. Note that we can only project points, so this is points along world coastlines, not polygons.\n\npts &lt;- read.csv(\"world_better.csv\") %&gt;%\n  dplyr::select(lon, lat)\n\n# sanity check with a map\nggplot(pts) + \n  geom_point(aes(x = lon, y = lat), size = 0.05) + \n  coord_equal()"
  },
  {
    "objectID": "posts/2021-10-21-experiments-with-r-interpolators/experiments-with-R-interpolators.html#triangles-interpolator",
    "href": "posts/2021-10-21-experiments-with-r-interpolators/experiments-with-R-interpolators.html#triangles-interpolator",
    "title": "Experiments with R interpolators",
    "section": "Triangles interpolator",
    "text": "Triangles interpolator\nThere are many different ways we can do this kind of interpolation. The simplest is based on triangulation. This method is available in the package interp but also in akima which is much quicker. The output x and y coordinates are formed by interpolating as shown below. x and y are the known locations of the input coordinate, which here are the longitude and latitude in out empirical projection dataset emp_proj. The desired outputs are at the longitude and latitude coordinates in the world maps dataset pts. And we do the interpolation twice, once for the x coordinate and once for the y coordinate in our target projection.\n\nx_out &lt;- akima::interpp(x = emp_proj$lon, y = emp_proj$lat, z = emp_proj$x,\n                xo = pts$lon, yo = pts$lat)\ny_out &lt;- akima::interpp(x = emp_proj$lon, y = emp_proj$lat, z = emp_proj$y,\n                xo = pts$lon, yo = pts$lat)\n\nNow make up a results data table and map it. akima puts the result in a column z in its output.\n\nresult &lt;- data.frame(x = x_out$z, y = y_out$z)\nggplot(result) + \n  geom_point(aes(x = x, y = y), size = 0.05) + \n  coord_equal()\n\nWarning: Removed 127 rows containing missing values or values outside the scale range\n(`geom_point()`)."
  },
  {
    "objectID": "posts/2021-10-21-experiments-with-r-interpolators/experiments-with-R-interpolators.html#apply-the-empirical-projections-cut-region",
    "href": "posts/2021-10-21-experiments-with-r-interpolators/experiments-with-R-interpolators.html#apply-the-empirical-projections-cut-region",
    "title": "Experiments with R interpolators",
    "section": "Apply the empirical projection’s cut region",
    "text": "Apply the empirical projection’s cut region\nWhat are those dots across the southern area of the map? These are points that happen to fall in triangles in the first coordinate system (i.e. lon-lat) where one corner of the triangle lies on a different side of a discontinuity in the projection than the other corners. We should avoid projecting points inside these triangles because they project (as we can see!) unreliably.\nFor the Briesemeister projection we know the precise location of this discontinuity, and have prepared a file delineating the ‘cut’ position. We can use this to remove points from the sample dataset that lie inside triangles that intersect the cut region.\nFirst, here is the discontinuity. Points close to or on this line could end up in very different parts of the projected output and so are ‘unsafe’ to project using our interpolation-based approximation.\n\ncut_sf &lt;- st_read(\"briesemeister-cut.geojson\")\n\nReading layer `briesemeister-cut' from data source \n  `/Users/david/Documents/code/dosull.github.io/posts/2021-10-21-experiments-with-r-interpolators/briesemeister-cut.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1 feature and 0 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: -179.8892 ymin: -82.94613 xmax: -0.3442386 ymax: 44.55223\nGeodetic CRS:  WGS 84\n\nggplot(cut_sf) + \n  geom_sf()\n\n\n\n\n\n\n\n\nNow triangulate the empirical projection data points, and assemble a polygon from all those triangles that are intersected by the discontinuity.\n\n# make the cut region into a sf dataset\nemp_proj_sf &lt;- emp_proj %&gt;%\n  st_as_sf(coords = c(\"lon\", \"lat\")) %&gt;%\n  st_set_crs(4326)\n\ntriangles &lt;- emp_proj_sf %&gt;%\n  st_union() %&gt;%\n  st_triangulate() %&gt;%   # triangulation of empirical projection points\n  st_cast() %&gt;%\n  st_as_sf() \n\nWarning in st_triangulate.sfc(.): st_triangulate does not correctly triangulate\nlongitude/latitude data\n\ncut_triangles &lt;- triangles %&gt;%\n  st_filter(cut_sf)\n\ncut_region_sf &lt;- cut_triangles %&gt;% \n  st_filter(cut_sf) %&gt;%\n  st_union() %&gt;%       \n  st_as_sf() \n\nWe quite reasonably get a warning that triangulation doesn’t really apply to geographical coordinates, but… akima did the interpolation by triangulating these points and it doesn’t know it’s unsafe (because it’s not a geospatial package). It’s not actually ‘unsafe’ as such in this case, because we aren’t using the triangulation for its metric properties anyway. So… we ignore this warning and plot this to see what we are dealing with\n\nggplot(triangles) +\n  geom_sf(colour = \"grey\") + \n  geom_sf(data = cut_triangles, fill = \"grey\", colour = \"white\") +\n  geom_sf(data = cut_region_sf, fill = \"#00000000\", colour = \"black\") +\n  geom_sf(data = cut_sf, color = \"red\")\n\n\n\n\n\n\n\n\nNow we use st_disjoint to remove points in the data to project that are inside the cut region.\n\npts_to_project_sp &lt;- pts %&gt;%\n  st_as_sf(coords = c(\"lon\", \"lat\")) %&gt;%\n  st_set_crs(4326) %&gt;%\n  st_filter(cut_region_sf, .predicate = st_disjoint) %&gt;%\n  as(\"Spatial\")\n\nThe last step converts the points to the SpatialPointsDataFrame format of the sp package, which akima can also work with:\n\n# we also need the empirical projection data in the sp format\nemp_proj_sp &lt;- emp_proj_sf %&gt;%\n  as(\"Spatial\")\n\nx &lt;- akima::interpp(emp_proj_sp, z = c(\"x\"), xo = pts_to_project_sp, linear = TRUE)\ny &lt;- akima::interpp(emp_proj_sp, z = c(\"y\"), xo = pts_to_project_sp, linear = TRUE)\n\nA bit unexpectedly, akima outputs the data to a two column dataframe with the interpolated values in a column with the same name as the input data, so getting the results into a final output table is as below.\n\nresult &lt;- data.frame(x = x$x, y = y$y)\nggplot(result) +\n  geom_point(aes(x = x, y = y), size = 0.05) + \n  coord_equal()\n\n\n\n\n\n\n\n\nAnd those rogue dots are all gone!"
  },
  {
    "objectID": "posts/2021-10-21-kde/kde.html",
    "href": "posts/2021-10-21-kde/kde.html",
    "title": "Kernel density estimation in R spatial",
    "section": "",
    "text": "This requires a surprising number of moving parts (at least the way I did it):\n\nlibrary(sf)\nlibrary(tmap)\nlibrary(spatstat)\nlibrary(raster)\nlibrary(dplyr)"
  },
  {
    "objectID": "posts/2021-10-21-kde/kde.html#packages",
    "href": "posts/2021-10-21-kde/kde.html#packages",
    "title": "Kernel density estimation in R spatial",
    "section": "",
    "text": "This requires a surprising number of moving parts (at least the way I did it):\n\nlibrary(sf)\nlibrary(tmap)\nlibrary(spatstat)\nlibrary(raster)\nlibrary(dplyr)"
  },
  {
    "objectID": "posts/2021-10-21-kde/kde.html#data",
    "href": "posts/2021-10-21-kde/kde.html#data",
    "title": "Kernel density estimation in R spatial",
    "section": "Data",
    "text": "Data\nThe data are some point data (Airbnb listings from here) and some polygon data (NZ census Statistical Area 2 data).\n\nLoad the data\n\npolys &lt;- st_read(\"sa2.gpkg\")\n\nReading layer `sa2' from data source \n  `/Users/david/Documents/code/dosull.github.io/posts/2021-10-21-kde/sa2.gpkg' \n  using driver `GPKG'\nSimple feature collection with 78 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 1735096 ymin: 5419590 xmax: 1759041 ymax: 5443768\nProjected CRS: NZGD2000 / New Zealand Transverse Mercator 2000\n\npts &lt;- st_read(\"abb.gpkg\")\n\nReading layer `abb' from data source \n  `/Users/david/Documents/code/dosull.github.io/posts/2021-10-21-kde/abb.gpkg' \n  using driver `GPKG'\nSimple feature collection with 1254 features and 16 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 1742685 ymin: 5420357 xmax: 1755385 ymax: 5442630\nProjected CRS: NZGD2000 / New Zealand Transverse Mercator 2000\n\n\nAnd have a look\n\ntm_shape(polys) +\n  tm_polygons() + \n  tm_shape(pts) + \n  tm_dots()"
  },
  {
    "objectID": "posts/2021-10-21-kde/kde.html#spatstat-for-density-estimation",
    "href": "posts/2021-10-21-kde/kde.html#spatstat-for-density-estimation",
    "title": "Kernel density estimation in R spatial",
    "section": "spatstat for density estimation",
    "text": "spatstat for density estimation\nThe best way I know to do density estimation in the R ecosystem is using the spatstat library’s specialisation of base R’s density function. That means converting the point data to a spatstat planar point pattern (ppp) object, which involves a couple of steps.\n\npts.ppp &lt;- pts$geom %&gt;% \n  as.ppp()\n\nA point pattern also needs a ‘window’, which we’ll make from the polygons.\n\npts.ppp$window &lt;- polys %&gt;%\n  st_union() %&gt;%       # combine all the polygons into a single shape\n  as.owin()            # convert to spatstat owin - again maptools...\n\n\nNow the kernel density\nWe need some bounding box info to manage the density estimation resolution\n\nbb &lt;- st_bbox(polys)\ncellsize &lt;- 100\nheight &lt;- (bb$ymax - bb$ymin) / cellsize\nwidth &lt;- (bb$xmax - bb$xmin) / cellsize\n\nNow we specify the size of the raster we want with dimyx (note the order, y then x) using height and width.\nWe can convert this directly to a raster, but have to supply a CRS which we pull from the original points input dataset. At the time of writing (August 2021) you’ll get a complaint about the New Zealand Geodetic Datum 2000 because recent changes in how projections and datums are handled are still working themselves out.\n\nkde &lt;- density(pts.ppp, sigma = 500, dimyx = c(height, width)) %&gt;%\n  raster() \ncrs(kde) = st_crs(pts)$wkt  # a ppp has no CRS information so add it\n\n\n\nLet’s see what we got\nWe can map this using tmap.\n\ntm_shape(kde) +\n  tm_raster(palette =  \"Reds\")\n\n\n\n\n\n\n\n\n\n\nA fallback sanity check\nTo give us an alternative view of the data, let’s just count points in polygons\n\npolys$n &lt;- polys %&gt;%\n  st_contains(pts) %&gt;%\n  lengths()\n\nAnd map the result\n\ntm_shape(polys) +\n  tm_polygons(col = \"n\", palette = \"Reds\", title = \"Points in polygons\")\n\n\n\n\n\n\n\n\n\n\nAggregate the density surface pixels to polygons\nThis isn’t at all necessary, but is also useful to know. This is also a relatively slow operation. Note that we add together the density estimates in the pixels contained by each polygon.\n\nsummed_densities &lt;- raster::extract(kde, polys, fun = sum)\n\nAppend this to the polygons and rescale so the result is an estimate of the original count. We multiply by cellsize^2 because each cell contains an estimate of the per sq metre (in this case, but per sq distance unit in general) density, so multiplying by the area of the cells gives an estimated count.\n\npolys$estimated_count = summed_densities[, 1] * cellsize ^ 2\n\nAnd now we can make another map\n\ntm_shape(polys) + \n  tm_polygons(col = \"estimated_count\", palette = \"Reds\",\n              title = \"500m KDE summed\")\n\n\n\n\n\n\n\n\nSpot the deliberate mistake?!\nSomething doesn’t seem quite right! What’s with the large numbers in the large rural area to the west of the city? Thing is, you shouldn’t really map count data like this, but should instead convert to densities. If we include that option in the tm_polygons function, then order is restored.\n\ntm_shape(polys) + \n  tm_polygons(col = \"estimated_count\", palette = \"Reds\", convert2density = TRUE,\n              title = \"500m KDE estimate\")\n\n\n\n\n\n\n\n\nReally, this should be done with the earlier map of points in polygons too, so let’s show all three side by side. tmap_arrange is nice for this, although it has trouble making legend title font sizes match, unless you do some creative renaming. I’ve also multiplied the KDE result by 1,000,000 to convert the density to listings per sq. km, and we can see that the three maps are comparable.\n\nm1 &lt;- tm_shape(kde * 1000000) + \n  tm_raster(palette = \"Reds\", title = \"500m KDE\")\nm2 &lt;- tm_shape(polys) + \n  tm_fill(col = \"n\", palette = \"Blues\", convert2density = TRUE,\n              title = \"Point density\")\nm3 &lt;- tm_shape(polys) + \n  tm_fill(col = \"estimated_count\", palette = \"Greens\", convert2density = TRUE,\n              title = \"KDE summed\")\ntmap_arrange(m1, m2, m3, nrow = 1)"
  },
  {
    "objectID": "posts/2021-12-08-affine-transformation-of-sf-objects/affine-transformations-of-sf-objects.html",
    "href": "posts/2021-12-08-affine-transformation-of-sf-objects/affine-transformations-of-sf-objects.html",
    "title": "Affine transformations of sf objects",
    "section": "",
    "text": "knitr::opts_chunk$set(error = TRUE, message = TRUE)"
  },
  {
    "objectID": "posts/2021-12-08-affine-transformation-of-sf-objects/affine-transformations-of-sf-objects.html#packages",
    "href": "posts/2021-12-08-affine-transformation-of-sf-objects/affine-transformations-of-sf-objects.html#packages",
    "title": "Affine transformations of sf objects",
    "section": "Packages",
    "text": "Packages\n\nlibrary(sf)\nlibrary(tmap)\nlibrary(dplyr)\nlibrary(wk)\n\nsf::sf_use_s2(FALSE)"
  },
  {
    "objectID": "posts/2021-12-08-affine-transformation-of-sf-objects/affine-transformations-of-sf-objects.html#a-simple-square",
    "href": "posts/2021-12-08-affine-transformation-of-sf-objects/affine-transformations-of-sf-objects.html#a-simple-square",
    "title": "Affine transformations of sf objects",
    "section": "A simple square",
    "text": "A simple square\nJust to get things set up let’s make a simple square.\n\nsquare &lt;- (st_polygon(list(matrix(c(-1, -1, 1, -1, 1, 1, -1, 1, -1, -1), \n                                 5, 2, byrow = TRUE))) * 0.5 + c(1, 0)) %&gt;%\n  st_sfc()\n\ntm_shape(square) + \n  tm_borders(col = \"red\") + \n  tm_grid()\n\nWarning: Currect projection of shape square unknown. Long-lat (WGS84) is\nassumed."
  },
  {
    "objectID": "posts/2021-12-08-affine-transformation-of-sf-objects/affine-transformations-of-sf-objects.html#simple-transformations",
    "href": "posts/2021-12-08-affine-transformation-of-sf-objects/affine-transformations-of-sf-objects.html#simple-transformations",
    "title": "Affine transformations of sf objects",
    "section": "Simple transformations",
    "text": "Simple transformations\nIn the code above, we made a polygon and multipled it by 0.5, then added c(1,0) to it. This had the effect of scaling it by 0.5 andthen translating it by the vector \\[\\left[\\begin{array}{c}1\\\\0\\end{array}\\right]\\]\nThese unlikely looking operations are perfectly valid, although they feel a bit ‘off’.\nEven more unlikely is that you can multiply an sf object by a matrix…\n\nang &lt;- pi / 6\nmat &lt;- matrix(c(cos(ang), -sin(ang), \n                sin(ang),  cos(ang)), 2, 2, byrow = TRUE)\n(square * mat) %&gt;% \n  plot()\n\n\n\n\n\n\n\n\nThis is very handy… but probably also a bad idea! Because you have to post-multiply by the matrix, the sense of many affine transformations is reversed and construction of the matrix is not ‘by the book’. Usually the affine transformation matrix \\(\\mathbf{A}\\) for an anti-clockwise rotation by angle \\(\\theta\\) around the origin, would be\n\\[\n\\mathbf{A} =\n\\left[\\begin{array}{cc}\n\\cos\\theta & -\\sin\\theta \\\\\n\\sin\\theta & \\cos\\theta\n\\end{array}\\right]\n\\]\nHere, because we are post-multiplying the rotation will be in the other direction… and to rotate anti-clockwise, you use the \\(-\\mathbf{A}=\\mathbf{A}^T\\)\n\\[\n-\\mathbf{A} =\n\\left[\\begin{array}{cc}\n-\\cos\\theta & \\sin\\theta \\\\\n-\\sin\\theta & -\\cos\\theta\n\\end{array}\\right] =\n\\left[\\begin{array}{cc}\n\\cos\\theta & \\sin\\theta \\\\\n-\\sin\\theta & \\cos\\theta\n\\end{array}\\right] = \\mathbf{A}^\\mathrm{T}\n\\]\nThis means that if you are doing any serious affine transforming of sf shapes at a low-level in R spatial, I recommend either writing some wrapper functions that generate and apply the necessary matrices on the fly, or, probably better yet, using the wk package which has proper support for affine transformations."
  },
  {
    "objectID": "posts/2021-10-20-random-even-points-on-the-globe/random-even-points-on-the-globe.html",
    "href": "posts/2021-10-20-random-even-points-on-the-globe/random-even-points-on-the-globe.html",
    "title": "Uniform random points on the globe",
    "section": "",
    "text": "Libraries are the usual suspects plus rnaturalearth for basemap data\nlibrary(sf)\nlibrary(ggplot2)\nlibrary(rnaturalearth)\nlibrary(dplyr)\n\nn &lt;- 2500\nThe key thing to realise here is that random uniform numbers in both latitude and longitude will not be evenly distributed on Earth’s surface, because the meridians converge toward the poles. We can make two datasets to show this. First a naive set of randomly located points:\npts_naive &lt;- data.frame(lon = runif(n) * 360 - 180,\n                        lat = runif(n) * 180 - 90,\n                        type = \"naive\")"
  },
  {
    "objectID": "posts/2021-10-20-random-even-points-on-the-globe/random-even-points-on-the-globe.html#here-comes-the-science",
    "href": "posts/2021-10-20-random-even-points-on-the-globe/random-even-points-on-the-globe.html#here-comes-the-science",
    "title": "Uniform random points on the globe",
    "section": "Here comes the science…",
    "text": "Here comes the science…\nAnd now a set where inserting a cosine correction ensures that the distribution of latitudes is appropriately more dense close to the equator:\n\npts_even &lt;- data.frame(lon = runif(n) * 360 - 180,\n                       lat = acos(runif(n) * 2 - 1) * 180 / pi - 90,\n                       type = \"even\")\n\n\nCompare the latitude distributions\nWe can make up a combined data table and directly compare the distribution of the latitudes with a nice density plot. The increased representation of points in the mid-latitudes with the cosine correction is clear.\n\npts &lt;- bind_rows(pts_naive, pts_even)\nggplot(pts) +\n  geom_density(aes(y = lat, fill = type), alpha = 0.5, lwd = 0) +\n  scale_fill_viridis_d()"
  },
  {
    "objectID": "posts/2021-10-20-random-even-points-on-the-globe/random-even-points-on-the-globe.html#make-a-map",
    "href": "posts/2021-10-20-random-even-points-on-the-globe/random-even-points-on-the-globe.html#make-a-map",
    "title": "Uniform random points on the globe",
    "section": "Make a map",
    "text": "Make a map\nUse an equal-area projection to clearly see the problem geographically.\n\nw &lt;- ne_countries(returnclass = \"sf\") %&gt;%\n  st_transform(\"+proj=hammer\")\n\npts_sf &lt;- pts %&gt;%\n  st_as_sf(coords = 1:2, crs = 4326)\n\nggplot(w) + \n  geom_sf(fill = \"#cccccc\", colour = \"white\", lwd = 0.35) +\n  geom_sf(data = pts_sf, aes(colour = type), alpha = 0.35) +\n  scale_colour_viridis_d() +\n  theme_minimal()\n\n\n\n\n\n\n\n\nThe naively distributed points are clearly denser at the poles than they should be, where the cosine term in the ‘even’ points generation method makes them evenly distributed over the globe."
  },
  {
    "objectID": "my-skills.html",
    "href": "my-skills.html",
    "title": "My skills",
    "section": "",
    "text": "For more information or advice on any of these contact me.\n\nWriting\nI have written 3 books and numerous articles, reviews, and book chapters.\n\n\nPresenting\nI have taught for over 20 years and can put together a mean slide show (I like to think…). These days, I use web-compatible formats, primarily revealjs or quarto. See my list of talks, or even the slides from a class for examples.\n\n\nAnalytics\nI work all the time in R and Python developing workflows to tidy, reformat, analyse, and visualize data, especially spatial data.\n\n\nVisualization\nI am a trained cartographer. I haven’t done a lot of publication cartography per se, but have regularly worked on visual analytics or maps of complex data in research projects.\n\n\nCoding\nI have been programming for as long a I can remember. The more or less full list of languages, with those I have taught in bold would be: (Apple) BASIC, PASCAL, Fortran, 6502 assembler, C/C++ (a little), Java (Masters and PhD work), NetLogo, Visual Basic (yeuch!), Python, R, and JavaScript (also HTML and CSS if you can call those programming languages).\nThese days, I use python and R all the time.\nI am not a software developer, but can write well organised and documented code.\nI love NetLogo, but freely admit that it is somewhat niche (surprisingly powerful though, see this geographical COVID model I built in lockdown).\nI have other languages in me: Julia and Rust seem particularly interesting, but I may wait for more mature geospatial stacks to emerge before tackling them.\n\n\nSimulation modelling\nSee above re NetLogo. I’ve also written a book about this.\n\n\nWeb\nMost of my web stuff is linked from these pages, so just have a look around. The most complicated web-thing I’ve built is probably this New Zealand 2018 commute visualization. I am not a web developer, but am happy to roll up my sleeves and figure stuff out if called on!\n\n\nProject management\nBefore academia I was a project engineer leading build, test, commissioning and maintenance of production line laser-scanning inspection equipment, working with major multinationals such as IBM, Kodak, Dow Chemical, and Sony. In that role I learned a great deal about project and people management."
  },
  {
    "objectID": "training.html",
    "href": "training.html",
    "title": "Training",
    "section": "",
    "text": "For more information contact me, especially if any of these or materials on similar themes is of interest to your organisation."
  },
  {
    "objectID": "training.html#spatial-data-science-an-introduction",
    "href": "training.html#spatial-data-science-an-introduction",
    "title": "Training",
    "section": "Spatial Data Science: An Introduction",
    "text": "Spatial Data Science: An Introduction\nThis course covers a lot of the basics of doing geospatial work using R, which enables the inclusion of spatial data into convenient code-based data analysis workflows."
  },
  {
    "objectID": "training.html#spatial-analysis-and-modelling",
    "href": "training.html#spatial-analysis-and-modelling",
    "title": "Training",
    "section": "Spatial Analysis and Modelling",
    "text": "Spatial Analysis and Modelling\nAn introduction to spatial statistical analysis. Again using R and (for the most part) following the outlines of my book with Dave Unwin Geographical Information Analysis"
  },
  {
    "objectID": "training.html#geographical-computing",
    "href": "training.html#geographical-computing",
    "title": "Training",
    "section": "Geographical Computing",
    "text": "Geographical Computing\nAn introduction to python programming for GISers. Using open libraries (primarily geopandas), this course provides a gentle introduction to python programming, using Jupyter notebooks as the medium. I was fortunate to get in on the ground floor of jupyter notebook based teaching while at Berkeley in this very short course.\nI also taught an introduction to geospatial technology at Berkeley for several years, entitled Digital Worlds. The slides for that course are available here. This course was what prompted me (eventually) to write Computing Geographically.\nNote Unfortunately, if you are not enrolled at a university or associated with a similar institution you might find links to some resources broken (e.g. DOI links to articles that are paywalled, or datasets that I do not have permission to share.)"
  },
  {
    "objectID": "presentations.html",
    "href": "presentations.html",
    "title": "Presentations",
    "section": "",
    "text": "Most talks are in web formats, and may include links that are now broken. Others are PDFs. Others are missing, but are listed because they give a sense of development over time.\n\n\n\nDate\nTitle\nNotes\n\n\n\n\n2024April\nA spatially explicit agent-based model of on-farm environmental interventions\nAnnual Meeting of the American Association of Geographers, Honolulu, Hawai’i, United States\n\n\n2024March\n30 Day Map Challenge 2023\nMaptime! Wellington\n\n\n2023September\nFrom geographical information science via spatial data science to geographical computing\nFourth Spatial Data Science Symposium, University of Canterbury Hub, 7 September\n\n\n2023August\nComputing Geographically: Bridging Giscience and Geography\nUniversity of Canterbury, School of Earth and Environment, Research Seminar, 10 August\n\n\n2022November\nTiled & woven thematic maps\nRegional GIS Forum, Palmerston North, 11 November\n\n\n2022August\nComputing geographically: rethinking space and place in giscience\nKeynote at New Zealand Geospatial Research Colloquium, 29-30 August\n\n\n2022August\nTiled & woven thematic maps\nGeoCart 2022, National Library, Wellington, 24-26 August\n\n\n2022July\nR for geospatial\nSpatial Literacy User Group, Te Herenga Waka - Victoria University of Wellington\n\n\n2021November\nWeaving maps of multivariate data\nState of New Zealand Cartography, Special Meeting of the New Zealand Cartographic Society, Wellington\n\n\n2021September\nMapping the Dulux Colours of New Zealand Using R\nMaptime! Aotearoa, online\n\n\n2020November\nSpatially-explicit models for exploring COVID-19 lockdown strategies\nNew Zealand Geographical Society, Wellington\n\n\n2020November\nComputing geographically: rethinking giscience as geography\nUniversity of Utah, Department of Geography, Geography Awareness Week Colloquium\n\n\n2019September\nA spatial simulation model to explore the potential impact of gene drives as a control on invasive wasps\nGeocomputation 2019, Queenstown, 18-21 September\n\n\n2019August\nTheoretical geography: definitely harder than physics!\nVvoIP_Physics_Debates symposium\n\n\n2019July\nAvoiding the YAAWN syndrome\nAgents for Theory: From Cases to General Principles, Theory Development through Agent-based Modeling, International Workshop held at Herrenhäuser Palace, Hanover, Germany\n\n\n2018May\nSome translation required, or: A city is not a network either!\nInaugural Brian Coffey lecture and workshop in Geographical Information Science University of Washington, Tacoma\n\n\n2018April\nComputing with many spaces: Generalizing projections for the digital geohumanities and GIScience\n(with Luke Bergmann who presented) 114th Annual Meeting of the American Association of Geographers, New Orleans, LA\n\n\n2018March\nReimagining GIScience for relational spaces\nUniversity of Colorado Boulder, Department of Geography Colloquium Series\n\n\n2017December\nBridging GIScience and Geographical Thought\nGeographic Data Science Lab, University of Liverpool\n\n\n2017September\nIdentifying ‘narrative arcs’ to explain outcomes in an agent-based model of island resource exploitation\nGraduate webinar series on Agent-based models, University of Minnesota. These are the same slides as a talk at Stanford a couple of years earlier…\n\n\n2017September\nSome translation required, or: A city is not a network either!\nInternational Symposium on The Future of Urban Network Research, University of Ghent, Belgium\n\n\n2017April\n‘Same only different’: rethinking the practice of digital urban geographies\n113th Meeting of the American Association of Geographers, Boston, MA\n\n\n2016November\nSimple spatial models: Building blocks for a process-based GIS?\nGeolunch Series, Geospatial Innovation Facility (GIF), University of California, Berkeley\n\n\n2016September\nSearching for common ground (again)\n(with Jim Thatcher and Luke Bergmann) Presented at 9th International Conference on Geographical Information Science (GIScience 2016), Montreal, Canada\n\n\n2016September\nSimple simulation models as a complexity ‘pattern language’\nLightning talk at Rethinking the ABCs: Agent-Based Models and Complexity Science in the age of Big Data, CyberGIS, and Sensor Networks pre-conference workshop at GIScience 2016, Montreal, Canada\n\n\n2016March\nSpatiality, maps, mathematics and critical human geography\nUniversity of Uppsala, Department of Social and Economic Geography\n\n\n2016January\nFuture GIS\n(with Matt Wilson) University of British Columbia, Department of Geography\n\n\n2015December\nThinking with and about models in geography\nUniversity of California, Davis. Geography Graduate Group seminar series.\n\n\n2015August\n(with Alex Singleton and Seth Spielman) Our town: How socioeconomics shape functional neighborhoods in American cities\nGeocomputation 2015, UT Dallas\n\n\n2015May\nSpatial simulation: Exploring pattern and process\nUNIGIS Salzburg Webinar\n\n\n2015May\nSimple spatial models: Building blocks for process-based GIS?\nStanford University\n\n\n2015May\nIdentifying ‘narrative arcs’ to explain outcomes in an agent-based model of island resource exploitation\nStanford University Libraries’ Center for Interdisciplinary Digital Research\n\n\n2015April\nIdentifying ‘narrative arcs’ to explain outcomes in an agent-based model of island resource exploitation\n(with George Perry) presented at the 110th Annual Meeting of the Association of American Geographers, Chicago, IL\n\n\n2014November\n‘Play well’: Learning about the world using spatial models\nUniversity of Oregon, Department of Geography and Complexity Science conference\n\n\n2014September\nUsing Personal Names to Explore Cultural, Ethnic and Linguistic Structure in Populations\nUC Berkeley, Department of Demography\n\n\n2014June\nSimple spatial models: building blocks for process-based GIS?\nInstitute of Australian Geographers – New Zealand Geographical Society Joint Conference, University of Melbourne\n\n\n2013August\nTowards a ‘pattern language’ for spatial simulation models\n(with George Perry) presented at SIRC NZ 2013, University of Otago, Dunedin, New Zealand. Extended abstract available here\n\n\n2013April\nTowards a ‘pattern language’ for spatial simulation models\n(with George Perry) presented at the 109th Annual Meeting of the Association of American Geographers, Los Angeles, CA\n\n\n2013February\nTowards a ‘pattern language’ for spatial simulation models\nDepartment of Geography, University of California Santa Barbara\n\n\n2012May\nNaming networks and population structure\nDepartment of Urban Engineering, University of Tokyo\n\n\n2012May\nSpatial Simulation: Exploring Pattern and Process – A Work in progress\nCentre for Spatial Information Science, University of Tokyo\n\n\n2012February\nAgent-based models: what are they good for? Or: did Schelling really need an ABM?\nPresented at the 108th Annual Meeting of the Association of American Geographers, New York, NY\n\n\n2011September\nModel Histories: The Generative Properties of Agent-Based Modelling\nPresented by James Millington (also with George Perry) at Annual Conference of the Royal Geographical Society with the Institute of British Geographers, Royal Geographical Society, London\n\n\n2011April\nNaming networks and population structure\n(with Pablo Mateos) presented at the 107th Annual Meeting of the Association of American Geographers, Seattle, WA\n\n\n2011April\nDo physicists have geography envy?\nwith Steve Manson (who presented) at the 107th Annual Meeting of the Association of American Geographers, Seattle, WA. This paper was eventually published in much different form in the Annals of the American Association of Geographers.\n\n\n2009December\nSimulating long distance dispersal processes in spatially heterogeneous landscapes\n(with George Perry) presented at Geocomputation 2009, University of New South Wales, Sydney, Australia. A version of this work was published in Ecological Informatics."
  }
]